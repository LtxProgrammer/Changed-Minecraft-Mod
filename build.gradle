buildscript {
    repositories {
        // These repositories are only for Gradle plugins, put any other repositories in the repository block further below
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = modVersion
group = 'net.ltxprogrammer.changed' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "Changed-m${minecraftVersion}"

// Mojang ships Java 17 to end users in 1.18+, so your mod should target Java 17.
java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    // The mappings can be changed at any time and must be in the following format.
    // Channel:   Version:
    // snapshot   YYYYMMDD   Snapshot are built nightly.
    // stable     #          Stables are built at the discretion of the MCP team.
    // official   MCVersion  Official field/method names from Mojang mapping files
    //
    // You must be aware of the Mojang license when using the 'official' mappings.
    // See more information here: https://github.com/MinecraftForge/MCPConfig/blob/master/Mojang.md
    //
    // Use non-default mappings at your own risk. They may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    mappings channel: 'official', version: minecraftVersion

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg') // Currently, this location cannot be changed from the default.

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            // The markers can be added/remove as needed separated by commas.
            // "SCAN": For mods scan.
            // "REGISTRIES": For firing of registry events.
            // "REGISTRYDUMP": For getting the contents of all registries.
            property 'forge.logging.markers', 'REGISTRIES'

            // Recommended logging level for the console
            // You can set various levels here.
            // Please read: https://stackoverflow.com/questions/2031163/when-to-use-the-different-log-levels
            property 'forge.logging.console.level', 'debug'

            // Comma-separated list of namespaces to load gametests from. Empty = all namespaces.
            property 'forge.enabledGameTestNamespaces', 'changed'

            mods {
                changed {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            // The markers can be added/remove as needed separated by commas.
            // "SCAN": For mods scan.
            // "REGISTRIES": For firing of registry events.
            // "REGISTRYDUMP": For getting the contents of all registries.
            property 'forge.logging.markers', 'REGISTRIES'

            // Recommended logging level for the console
            // You can set various levels here.
            // Please read: https://stackoverflow.com/questions/2031163/when-to-use-the-different-log-levels
            property 'forge.logging.console.level', 'debug'

            // Comma-separated list of namespaces to load gametests from. Empty = all namespaces.
            property 'forge.enabledGameTestNamespaces', 'changed'

            mods {
                changed {
                    source sourceSets.main
                }
            }
        }

        // This run config launches GameTestServer and runs all registered gametests, then exits.
        // By default, the server will crash when no gametests are provided.
        // The gametest system is also enabled by default for other run configs under the /test command.
        gameTestServer {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            // The markers can be added/remove as needed separated by commas.
            // "SCAN": For mods scan.
            // "REGISTRIES": For firing of registry events.
            // "REGISTRYDUMP": For getting the contents of all registries.
            property 'forge.logging.markers', 'REGISTRIES'

            // Recommended logging level for the console
            // You can set various levels here.
            // Please read: https://stackoverflow.com/questions/2031163/when-to-use-the-different-log-levels
            property 'forge.logging.console.level', 'debug'

            // Comma-separated list of namespaces to load gametests from. Empty = all namespaces.
            property 'forge.enabledGameTestNamespaces', 'changed'

            mods {
                changed {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            // The markers can be added/remove as needed separated by commas.
            // "SCAN": For mods scan.
            // "REGISTRIES": For firing of registry events.
            // "REGISTRYDUMP": For getting the contents of all registries.
            property 'forge.logging.markers', 'REGISTRIES'

            // Recommended logging level for the console
            // You can set various levels here.
            // Please read: https://stackoverflow.com/questions/2031163/when-to-use-the-different-log-levels
            property 'forge.logging.console.level', 'debug'

            // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
            args '--mod', 'changed', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                changed {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    // Put repositories for dependencies here
    // ForgeGradle automatically adds the Forge maven and Maven Central for you

    // If you have mod jar dependencies in ./libs, you can declare them as a repository like so:
    flatDir {
        dir 'libs'
    }
    maven {
        // location of the maven that hosts JEI files
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "https://modmaven.dev"
    }
    maven { url "https://cursemaven.com" }
    maven { url "https://maven.shedaniel.me" }
}

mixin {
    add sourceSets.main, "changed.refmap.json"

    config "changed.mixins.json"
    config "changed.compatibility.mixins.json"
}

dependencies {
    // Specify the version of Minecraft to use. If this is any group other than 'net.minecraft', it is assumed
    // that the dep is a ForgeGradle 'patcher' dependency, and its patches will be applied.
    // The userdev artifact is a special name and will get all sorts of transformations applied to it.
    minecraft "net.minecraftforge:forge:${minecraftVersion}-${forgeVersion}"

    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'


    implementation fg.deobf("curse.maven:presence-footsteps-forge-433068:4328018") // Forge 1.18.2 v1.5.1
    implementation fg.deobf("curse.maven:spark-361579:4505375") // Forge 1.18.2 v1.10.38
    implementation fg.deobf("curse.maven:modernfix-790626:5399365") // Forge 1.18.2 v5.18.0
    implementation fg.deobf("curse.maven:rubidium-574856:4494903") // Forge 1.18.2 v0.5.6
    implementation fg.deobf("curse.maven:oculus-581495:4578744") // Forge 1.18.2 v1.6.4
    implementation fg.deobf("curse.maven:vivecraft-667903:5830810") // Forge 1.18.2 v1.1.14
    //implementation fg.deobf("com.simibubi.create:create-1.18.2:0.5.1.c-298") // Create

    compileOnly fg.deobf("mezz.jei:jei-${minecraftVersion}:${jeiVersion}:api")
    //runtimeOnly fg.deobf("mezz.jei:jei-${minecraftVersion}:${jeiVersion}")

    implementation fg.deobf("me.shedaniel:RoughlyEnoughItems-forge:${reiVersion}")
    implementation fg.deobf("me.shedaniel.cloth:cloth-config-forge:${clothVersion}")
    implementation fg.deobf("dev.architectury:architectury-forge:${archVersion}")

    compileOnly fg.deobf("curse.maven:selene-499980:5660287") // Forge 1.18.2 v1.17.16
    //runtimeOnly fg.deobf("curse.maven:supplementaries-412082:4548315") // Forge 1.18.2 v1.5.18

    compileOnly fg.deobf("curse.maven:balm-531761:4442615") // Forge 1.18.2 v3.2.6
    compileOnly fg.deobf("curse.maven:hardcore-revival-274036:3830873") // Forge 1.18.2 v8.0.1

    compileOnly fg.deobf("curse.maven:pehkui-319596:5393085") // Forge 1.18.2 v3.8.2

    // These mods have 3rd party sharing disabled
    compileOnly fg.deobf("dev.tr7zw:notenoughanimations-forge-1.7.0-mc1.18.2:1.7.0")
    compileOnly fg.deobf("dev.tr7zw:firstperson-forge-2.3.2-mc1.18.2:2.3.2")

    // Uncomment here to test the dragons
    // implementation fg.deobf("curse.maven:geckolib-388172:4181370") // Forge 1.18.2 v3.0.57
    // implementation fg.deobf("curse.maven:dragons-survival-420799:5570486") // Forge 1.18.2 v27.07.2024

    compileOnly fg.deobf("curse.maven:framework-549225:4613856") // Forge 1.18.2 v0.4.3
    compileOnly fg.deobf("curse.maven:mrcrayfishs-gun-mod-289479:4344223") // Forge 1.18.2 v1.3.3

    implementation fg.deobf("curse.maven:playeranimator-658587:4418152") // Forge 1.18.2 v1.0.2
    runtimeOnly fg.deobf("curse.maven:better-combat-by-daedelus-639842:4428885") // Forge 1.18.2 v1.6.2

    compileOnly fg.deobf("curse.maven:beyond-earth-377448:4940240") // Forge 1.18.2 v7.0-SNAPSHOT-04
    compileOnly fg.deobf("curse.maven:carry-on-274259:5141758") // Forge 1.18.2, v1.17.2.15
    compileOnly fg.deobf("curse.maven:leashed-376861:3614245") // Forge 1.18.2 v1.2.3
    compileOnly fg.deobf("curse.maven:ctm-267602:3933537") // Forge 1.18.2 v1.1.5+5
    compileOnly fg.deobf("curse.maven:chisels-bits-231095:4119191") // Forge 1.18.2 v1.2.116
    //runtimeOnly fg.deobf("curse.maven:coroutil-237749:5008370") // Forge 1.18.2 v1.3.6
    compileOnly fg.deobf("curse.maven:what-are-they-up-to-945479:5008387") // Forge 1.18.2 v1.0.14

    compileOnly fg.deobf("curse.maven:originsforge-474438:5179273") // Forge 1.18.2 v1.5.0.2
    //runtimeOnly fg.deobf("curse.maven:caelus-308989:3650485")
    // For more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html
}

// Example for how to get properties into the manifest for reading at runtime.
jar {
    manifest {
        attributes([
                "Specification-Title"     : "changed",
                "Specification-Vendor"    : "LtxProgrammer",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "LtxProgrammer",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

// Example configuration to allow publishing using the maven-publish plugin
// This is the preferred method to reobfuscate your jar file
jar.finalizedBy('reobfJar')
// However if you are in a multi-project build, dev time needs unobfed jar files, so you can delay the obfuscation until publishing by doing
// publish.dependsOn('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}
